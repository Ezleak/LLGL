name: Google Android

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_android:
    strategy:
      matrix:
        lib: [Shared, Static]
        config: [Release]
        abi: [arm64-v8a]
      fail-fast: false
    
    runs-on: ubuntu-latest

    env:
      ANDROID_API_LEVEL: 28
      README: ${{ github.workspace }}/README.txt
      GAUSSIAN_LIB_DIR: external/GaussianLib/include

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies (Android NDK)
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r26b
        add-to-path: false

    - name: 1
      run: |
        sudo wget -O /etc/apt/trusted.gpg.d/lunarg-signing-key-pub.asc http://packages.lunarg.com/lunarg-signing-key-pub.asc
        sudo wget -O /etc/apt/sources.list.d/lunarg-vulkan-noble.list http://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
        sudo apt update
        sudo apt-get install libx11-dev libxrandr-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev vulkan-sdk vulkan-tools

    - name: Configure CMake
      run: >
        cmake -S . -B ${{github.workspace}}/Android-${{ matrix.abi }}
        -DCMAKE_TOOLCHAIN_FILE="${{ steps.setup-ndk.outputs.ndk-path }}/build/cmake/android.toolchain.cmake"
        -DANDROID_ABI=${{ matrix.abi }}
        -DANDROID_PLATFORM=${{ env.ANDROID_API_LEVEL }}
        -DLLGL_VK_ENABLE_SPIRV_REFLECT=ON
        -DANDROID_STL=c++_shared
        -DANDROID_CPP_FEATURES="rtti exceptions"
        -DCMAKE_BUILD_TYPE=${{ matrix.config }}
        -DLLGL_BUILD_STATIC_LIB=${{ matrix.lib == 'Static' && 'ON' || 'OFF' }}
        -DLLGL_BUILD_RENDERER_OPENGLES3=ON
        -DLLGL_BUILD_RENDERER_OPENGL=ON
        -DLLGL_BUILD_RENDERER_NULL=OFF
        -DLLGL_BUILD_RENDERER_VULKAN=ON
        -DLLGL_BUILD_EXAMPLES=ON
        -DLLGL_BUILD_TESTS=ON
        -DLLGL_BUILD_WRAPPER_C99=ON
        -DLLGL_BUILD_WRAPPER_CSHARP=ON
        -DGaussLib_INCLUDE_DIR:STRING="${{ env.GAUSSIAN_LIB_DIR }}"

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/Android-${{ matrix.abi }} --config ${{ matrix.config }}
        CURRENT_TIME=$(date)
        echo "LLGL built for Android on $CURRENT_TIME." > ${{ env.README }}

    - name: Upload Binaries
      uses: actions/upload-artifact@v4
      if: matrix.lib == 'Shared' && matrix.config == 'Release'
      with:
        name: LLGL-Android-${{ matrix.config }}-${{ matrix.abi }}
        path: |
          ${{ env.README }}
          ${{ github.workspace }}/Android-${{ matrix.abi }}/build
      
